// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import (
	"github.com/a-h/templ"
	templruntime "github.com/a-h/templ/runtime"
	"github.com/mikejsmith1985/devsmith-modular-platform/internal/ui/components/card"
)

func Dashboard(user DashboardUser) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Hero Section --> <section class=\"bg-gradient-to-r from-blue-600 to-indigo-600 dark:from-blue-900 dark:to-indigo-900 text-white py-12 px-4 sm:px-6 lg:px-8\"><div class=\"max-w-7xl mx-auto\"><h2 class=\"text-3xl sm:text-4xl font-bold mb-2\">Welcome, ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(user.Username)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `apps/portal/templates/dashboard.templ`, Line: 16, Col: 76}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "!</h2><p class=\"text-lg opacity-90\">AI-assisted code review and development analytics</p></div></section><!-- Main Content --> <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\"><div class=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\"><!-- Review Service Card -->")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = card.Card(card.CardProps{
				Title:       "Code Review",
				Description: "Analyze code with 5 reading modes: Preview, Skim, Scan, Detailed, Critical",
				Icon:        "üìñ",
				BadgeText:   "Ready",
				BadgeColor:  "green",
				ActionText:  "Open Review",
				ActionURL:   "http://localhost:8081",
				StatLabel:   "Reading Modes",
				StatValue:   "5",
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<!-- Logs Service Card -->")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = card.Card(card.CardProps{
				Title:       "Development Logs",
				Description: "Real-time platform logs, error tracking, and health monitoring",
				Icon:        "üìù",
				BadgeText:   "Ready",
				BadgeColor:  "green",
				ActionText:  "Open Logs",
				ActionURL:   "http://localhost:8082",
				StatLabel:   "Health Check",
				StatValue:   "Active",
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<!-- Analytics Service Card -->")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = card.Card(card.CardProps{
				Title:       "Analytics",
				Description: "Usage trends, AI cost monitoring, and performance insights",
				Icon:        "üìä",
				BadgeText:   "Ready",
				BadgeColor:  "green",
				ActionText:  "Open Analytics",
				ActionURL:   "http://localhost:8083",
				StatLabel:   "Metrics",
				StatValue:   "Live",
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<!-- Healthcheck Service Card -->")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = card.Card(card.CardProps{
				Title:       "System Health",
				Description: "Platform health status, diagnostics, and service monitoring",
				Icon:        "üè•",
				BadgeText:   "Monitor",
				BadgeColor:  "blue",
				ActionText:  "Check Status",
				ActionURL:   "http://localhost:8082/api/logs/healthcheck",
				StatLabel:   "Status",
				StatValue:   "Check",
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</div><!-- Stats Section --><section class=\"mt-16\"><h3 class=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">Platform Overview</h3><div class=\"grid gap-4 md:grid-cols-4\"><div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\"><p class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Status</p><p class=\"text-3xl font-bold text-green-600 dark:text-green-400 mt-2\">All Online</p><p class=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">3/3 services operational</p></div><div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\"><p class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">AI Model</p><p class=\"text-3xl font-bold text-blue-600 dark:text-blue-400 mt-2\">Configured</p><p class=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">Multiple providers ready</p></div><div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\"><p class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Uptime</p><p class=\"text-3xl font-bold text-purple-600 dark:text-purple-400 mt-2\">99.9%</p><p class=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">Last 30 days</p></div><div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\"><p class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Version</p><p class=\"text-3xl font-bold text-indigo-600 dark:text-indigo-400 mt-2\">v1.0</p><p class=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">Latest production</p></div></div></section></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout("Dashboard", &DashboardUser{
			Username:  user.Username,
			Email:     user.Email,
			AvatarURL: user.AvatarURL,
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// LogsDashboard renders the logs dashboard page with pre-populated data
func LogsDashboard(data LogsDashboardData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var5 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<!-- Hero Section --> <section class=\"bg-gradient-to-r from-purple-600 to-pink-600 dark:from-purple-900 dark:to-pink-900 text-white py-12 px-4 sm:px-6 lg:px-8\"><div class=\"max-w-7xl mx-auto\"><h2 class=\"text-3xl sm:text-4xl font-bold mb-2\">üìä Logs Dashboard</h2><p class=\"text-lg opacity-90\">Platform observability and error monitoring</p></div></section><!-- Main Content --> <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\"><!-- Stats Grid --><section class=\"mb-12\"><h3 class=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">Service Statistics</h3><div class=\"grid gap-4 md:grid-cols-4\"><div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\"><p class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Total Logs</p><p class=\"text-3xl font-bold text-blue-600 dark:text-blue-400 mt-2\">--</p></div><div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\"><p class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Error Rate</p><p class=\"text-3xl font-bold text-red-600 dark:text-red-400 mt-2\">--</p></div><div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\"><p class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Warnings</p><p class=\"text-3xl font-bold text-yellow-600 dark:text-yellow-400 mt-2\">--</p></div><div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\"><p class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Active Services</p><p class=\"text-3xl font-bold text-green-600 dark:text-green-400 mt-2\">--</p></div></div></section><!-- Top Errors Section --><section class=\"mb-12\"><h3 class=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">üö® Top Errors</h3><div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700 text-center text-gray-500 dark:text-gray-400\">No errors found</div></section><!-- Error Trends Section --><section class=\"mb-12\"><h3 class=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">üìà Error Trends</h3><div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700 text-center text-gray-500 dark:text-gray-400\">No trend data available</div></section><!-- Alert Management Section --><section><h3 class=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">‚ö†Ô∏è Alert Configuration</h3><div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\"><p class=\"text-gray-600 dark:text-gray-400 mb-4\">View the full Logs dashboard with real-time data at the Logs service.</p><a href=\"http://localhost:8082\" class=\"inline-block px-4 py-2 rounded-lg font-medium bg-blue-600 text-white hover:bg-blue-700 dark:bg-blue-700 dark:hover:bg-blue-800 transition-colors\">View Full Dashboard</a></div></section></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout("Logs Dashboard", &data.User).Render(templ.WithChildren(ctx, templ_7745c5c3_Var5), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate

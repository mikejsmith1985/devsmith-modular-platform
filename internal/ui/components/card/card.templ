package card

type CardProps struct {
	Title       string
	Description string
	Icon        string
	BadgeText   string
	BadgeColor  string
	ActionText  string
	ActionURL   string
	StatLabel   string
	StatValue   string
}

templ Card(props CardProps) {
	<div
		role="article"
		class="bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 p-6"
		aria-label={ props.Title }
	>
		<div class="flex items-start justify-between gap-4">
			<div class="flex-1">
				if props.Icon != "" {
					<div class="text-2xl mb-3 opacity-100 hover:opacity-110 transition-opacity">{ props.Icon }</div>
				}
				<h3 class="text-lg font-semibold text-gray-900 dark:text-white">{ props.Title }</h3>
				if props.Description != "" {
					<p class="text-sm text-gray-600 dark:text-gray-400 mt-2">{ props.Description }</p>
				}
			</div>
			if props.BadgeText != "" {
				<span class={ badgeClass(props.BadgeColor) }>
					{ props.BadgeText }
				</span>
			}
		</div>

		if props.StatLabel != "" || props.ActionText != "" {
			<div class="mt-5 flex items-center justify-between border-t border-gray-200 dark:border-gray-700 pt-5">
				if props.StatLabel != "" {
					<div>
						<span class="text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide">{ props.StatLabel }</span>
						<div class="text-lg font-bold text-gray-900 dark:text-white mt-1">{ props.StatValue }</div>
					</div>
				}
				if props.ActionText != "" {
					<a href={ templ.SafeURL(props.ActionURL) } class="inline-flex items-center text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors">
						{ props.ActionText }
						<svg class="w-4 h-4 ml-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
						</svg>
					</a>
				}
			</div>
		}
	</div>
}

func badgeClass(color string) string {
	switch color {
	case "green":
		return "px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200"
	case "blue":
		return "px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200"
	case "red":
		return "px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200"
	case "yellow":
		return "px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200"
	default:
		return "px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200"
	}
}

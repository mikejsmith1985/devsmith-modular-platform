package toast

type ToastProps struct {
	Type        string // success, error, warning, info
	Title       string
	Message     string
	Dismissible bool
}

templ Toast(props ToastProps) {
	<div class={ toastClass(props.Type) } role="alert" aria-live="polite" aria-atomic="true">
		<div class="flex items-start">
			<div class="flex-shrink-0">
				{ children... }
			</div>
			<div class="ml-3 flex-1">
				<p class="text-sm font-medium">{ props.Title }</p>
				<p class="mt-1 text-sm opacity-90">{ props.Message }</p>
			</div>
			if props.Dismissible {
				<button type="button" class="ml-3 inline-flex text-gray-400 hover:text-gray-500 focus:outline-none" aria-label="dismiss notification">
					<svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
						<path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
					</svg>
				</button>
			}
		</div>
	</div>
}

func toastClass(toastType string) string {
	base := "rounded-lg border p-4"
	
	switch toastType {
	case "success":
		return base + " border-green-200 bg-green-50 text-green-800 dark:border-green-800 dark:bg-green-900 dark:text-green-200"
	case "error":
		return base + " border-red-200 bg-red-50 text-red-800 dark:border-red-800 dark:bg-red-900 dark:text-red-200"
	case "warning":
		return base + " border-yellow-200 bg-yellow-50 text-yellow-800 dark:border-yellow-800 dark:bg-yellow-900 dark:text-yellow-200"
	case "info":
		return base + " border-blue-200 bg-blue-50 text-blue-800 dark:border-blue-800 dark:bg-blue-900 dark:text-blue-200"
	default:
		return base + " border-gray-200 bg-gray-50 text-gray-800 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-200"
	}
}
